apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    labels:
      template: postgresql-ephemeral-template
    name: postgresql
  stringData:
    database-name: jira
    database-password: jira
    database-user: jira
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      template: postgresql-ephemeral-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      template: postgresql-ephemeral-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ""
          name: postgresql-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10-el8
          namespace: openshift
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      run: jira
    name: jira
  spec:
    replicas: 1
    selector:
      run: jira
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          run: jira
      spec:
        containers:
        - env:
          - name: ATL_PROXY_NAME
            value: jira-release-management-dev.apps-crc.testing
          - name: ATL_TOMCAT_SCHEME
            value: https
          - name: ATL_TOMCAT_SECURE
            value: "true"
          - name: SET_PERMISSIONS
            value: "true"
          - name: JIRA_SHARED_HOME
            value: /var/atlassian/application-data/shared-home
          - name: ATL_JDBC_URL
            value: jdbc:postgresql://postgresql:5432/jira
          - name: ATL_JDBC_USER
            value: jira
          - name: ATL_JDBC_PASSWORD
            value: jira
          - name: ATL_DB_DRIVER
            value: org.postgresql.Driver
          - name: ATL_DB_TYPE
            value: postgres72
          - name: JVM_SUPPORT_RECOMMENDED_ARGS
            valueFrom:
              configMapKeyRef:
                key: additional_jvm_args
                name: jira-jvm-config
          - name: JVM_MINIMUM_MEMORY
            valueFrom:
              configMapKeyRef:
                key: min_heap
                name: jira-jvm-config
          - name: JVM_MAXIMUM_MEMORY
            valueFrom:
              configMapKeyRef:
                key: max_heap
                name: jira-jvm-config
          - name: JVM_RESERVED_CODE_CACHE_SIZE
            valueFrom:
              configMapKeyRef:
                key: reserved_code_cache
                name: jira-jvm-config
          image: atlassian/jira-software:8.13.5
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - /shutdown-wait.sh
          name: jira
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 40001
            name: ehcache
            protocol: TCP
          - containerPort: 40011
            name: ehcacheobject
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "2"
              memory: 2G
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/atlassian/application-data/jira
            name: local-home
          - mountPath: /opt/atlassian/jira/logs
            name: local-home
            subPath: log
          - mountPath: /var/atlassian/application-data/shared-home
            name: shared-home
        initContainers:
        - command:
          - sh
          - -c
          - (chgrp 2001 /shared-home; chmod g+w /shared-home)
          image: alpine
          imagePullPolicy: IfNotPresent
          name: nfs-permission-fixer
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared-home
            name: shared-home
        securityContext:
          fsGroup: 2001
        serviceAccountName: default
        volumes:
        - emptyDir: {}
          name: local-home
        - emptyDir: {}
          name: shared-home
- apiVersion: v1
  data:
    additional_jvm_args: -Datlassian.logging.cloud.enabled=false -XX:ActiveProcessorCount=2
    max_heap: 768m
    min_heap: 384m
    reserved_code_cache: 512m
  kind: ConfigMap
  metadata:
    name: jira-jvm-config
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      run: jira
    name: jira
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      run: jira
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 3000s
    labels:
      run: jira
    name: jira
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: jira
      weight: 100
kind: List
metadata: {}
